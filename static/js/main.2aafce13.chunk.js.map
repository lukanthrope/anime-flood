{"version":3,"sources":["reducer/index.js","store/index.js","components/lengind-page/Registration.js","components/lengind-page/Login.js","components/lengind-page/Lendos.js","components/Header/index.js","components/Chat/Message.js","components/Spinner/index.js","components/Chat/index.js","App.js","serviceWorker.js","index.js","pics/tyan3.png","pics/tyan2.png"],"names":["initialState","showSpinner","user","localStorage","getItem","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","username","store","createStore","connect","dispatch","authorize","_ref","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","result","setResult","register","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e","res","wrap","_context","prev","next","preventDefault","axios","post","sent","errorHandler","data","registred","setItem","token","abrupt","t0","console","log","stop","_x","apply","this","both","errors","username: Path `username` is required., password: Path `password` is required.","username: Path `username` is required., password: Short password","username: Path `username` is required.","password: Path `password` is required.","password: Short password","username taken","default","IsInvalid","field","includes","react_default","createElement","Form","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target","isInvalid","Text","className","Check","label","Button","variant","error","setError","login","Lendos","hasAccount","setHasAccount","handleClick","useEffect","document","body","style","overflow","background","Container","Row","Col","xs","lg","src","tyan","alt","onClick","lengind_page_Login","lengind_page_Registration","tyan2","Header","memo","fluid","clear","Message","image","classProp","Image","concat","thumbnail","Spinner","socket","socketIOClient","spinner","messages","setMessages","load","setLoad","messagesRef","useRef","err","setErr","_useState7","display","_useState8","showButton","setShowButton","OnChange","file","formData","files","FormData","append","headers","Content-Type","emit","url","fileName","author","goDown","current","scrollIntoView","behavior","listener","window","pageYOffset","clientHeight","addEventListener","_callee2","_context2","get","setTimeout","removeEventListener","Array","isArray","on","toConsumableArray","components_Header","components_Spinner","map","_ref4","index","array","Chat_Message","key","ref","name","permitted","setPermitted","check","Authorization","components_Chat","lengind_page_Lendos","Boolean","location","hostname","match","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2aafce13.chunk.js","sourcesContent":["const initialState = {\n  showSpinner: false,\n  user: localStorage.getItem('user') === 'null' ? null : localStorage.getItem('user'),\n};\n\nfunction reducer(state = initialState, action) {\n  switch(action.type) {\n    case 'SHOW_SPINNER':\n      return {\n        ...state,\n        showSpinner: !state.showSpinner,\n      };\n    case 'AUTHORIZE':\n      return {\n        ...state,\n        user: action.payload.username,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import reducer from '../reducer';\nimport { createStore } from 'redux';\n\nconst store = createStore(reducer);\n\nexport default store;","import React, { useState } from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst Registration = ({ authorize, showSpinner }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [result, setResult] = useState('');\n\n  const register = async e => {\n    e.preventDefault();\n\n    showSpinner();\n\n    try {\n      const res = await axios.post('https://shrouded-depths-50130.herokuapp.com/api/registration', {\n        username, password\n      });\n    \n      errorHandler(res.data);\n      \n      if (res.data.registred) {\n        localStorage.setItem('user', username);\n        localStorage.setItem('token', res.data.token)\n        authorize(username);\n        showSpinner();\n        return;\n      }\n\n    } catch(err) {\n      console.log(err);\n    }\n\n    showSpinner();\n  }\n\n  const both = 'fulfill this field';\n\n  const errorHandler =  type => {\n    const errors = {\n      'username: Path `username` is required., password: Path `password` is required.': both,\n      'username: Path `username` is required., password: Short password': both,\n      'username: Path `username` is required.': 'enter username',\n      'password: Path `password` is required.': 'enter password',\n      'password: Short password': 'short password',\n      'username taken': 'username taken',\n      'default': ''\n    };\n\n    setResult(errors[type] || errors['default']);\n  };\n\n  const IsInvalid = field  => {\n    if (result.includes(field) || result === both)\n      return true;\n    return false;\n  };\n\n  return (\n    <Form onSubmit={(e) => register(e)}> \n      <Form.Group controlId=\"formBasicUsername\">\n        <Form.Label>Nickname</Form.Label>\n        <Form.Control \n          type=\"username\"\n          placeholder=\"Nickname\" \n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          isInvalid={IsInvalid('username')}\n          />\n        <Form.Text className=\"text-danger\">\n          {IsInvalid('username') ? result : ''}\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control \n          type=\"password\"\n          placeholder=\"Password\" \n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          isInvalid={IsInvalid('password')} \n          />\n          <Form.Text className=\"text-danger\">\n            {IsInvalid('password') ? result : ''}\n          </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicChecbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: () => dispatch({ type: 'SHOW_SPINNER' }),\n  authorize: username => dispatch({\n    type: 'AUTHORIZE',\n    payload: {\n      username\n    }\n  }),\n});\n\nexport default connect(null, mapDispatchToProps)(Registration);","import React, { useState } from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst Login = ({ authorize, showSpinner }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const usernameError = 'enter your username';\n  const passwordError = 'enter password';\n\n  const login = async e => {\n    e.preventDefault();\n\n    showSpinner();\n\n    if (username === '') {\n      showSpinner();\n      return setError(usernameError);\n    } \n      \n    if (password === '') {\n      showSpinner();\n      return setError(passwordError);\n    }\n\n    try {\n      const res = await axios.post('https://shrouded-depths-50130.herokuapp.com/api/login', {\n        username, password\n      });\n      console.log(res);\n      if (res.data !== 'wrong username or password') {\n        showSpinner();\n        localStorage.setItem('user', username);\n        localStorage.setItem('token', res.data);\n        return authorize(username);\n      } else {\n        showSpinner();\n        setError(res.data);\n      }\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Form onSubmit={(e) => login(e)}> \n      <Form.Group controlId=\"formBasicUsername\">\n        <Form.Label>Nickname</Form.Label>\n        <Form.Control \n          type=\"username\"\n          placeholder=\"Nickname\" \n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          isInvalid={error && error !== passwordError}\n          />\n          <Form.Text className=\"text-danger\">\n          { error === usernameError ? error : '' }\n          </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control \n          type=\"password\"\n          placeholder=\"Password\" \n          value={password}\n          onChange={e => setPassword(e.target.value)} \n          isInvalid={error && error !== usernameError}\n          />\n          <Form.Text className=\"text-danger\">\n          { error && error !== usernameError ? error : '' }\n          </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicChecbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n\nconst mapDispatchTopProps = dispatch => ({\n  showSpinner: () => dispatch({ type: 'SHOW_SPINNER' }),\n  authorize: username => dispatch({\n    type: 'AUTHORIZE',\n    payload: {\n      username\n    }\n  }),\n});\n\nexport default connect(null, mapDispatchTopProps)(Login);","import React, { useState, useEffect } from 'react';\nimport tyan from '../../pics/tyan3.png';\nimport tyan2 from '../../pics/tyan2.png';\nimport Registration  from './Registration';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './styles/styles.css'\nimport Login from './Login';\n\nconst Lendos = () => {\n  const [hasAccount, setHasAccount] = useState(true); \n\n  const handleClick = () =>\n    setHasAccount(prev => !prev);\n\n    useEffect(() => {\n      document.body.style.overflow = 'hidden';\n      document.body.style.background = 'white';\n    }, []);\n\n  return (\n    <div className=\"container\">\n      <Container>\n        <h1 className=\"h1-header\">Wecome to Anime-Flood</h1>\n        <Row>\n          <Col xs=\"2\" lg=\"3\">\n            <img className=\"firstPic lendingPic\" src={tyan} alt={'tyan'} />\n          </Col>\n          <Col xs=\"8\" lg=\"6\">\n\n          { hasAccount ? <h4>\n              Sign in \n              <span className=\"text-muted small\"> have no account?<span className=\"sign\" onClick={handleClick}> sign up</span></span>\n              \n            </h4> : <h4>\n              Registration \n              <span className=\"text-muted small\"> have an account?<span className=\"sign\" onClick={handleClick} > sign in</span></span>  \n            </h4> } \n            \n            { hasAccount ? <Login /> : <Registration /> } \n          </Col>\n          <Col xs=\"2\" lg=\"3\">\n            <img className=\"lendingPic\" src={tyan2} alt={'tyan'} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Lendos;","import React, { memo } from 'react';\nimport { Container, Row, Button, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport './styles.css'\n\nconst Header = memo(({ authorize, username }) =>\n  <header>\n    <Container fluid={true}>\n      <Row>\n        <Col xs=\"8\" lg=\"10\"><h2 className=\"logo\">Amime-flood</h2></Col>\n        <Col xs=\"1\" lg=\"2\">\n          <span className=\"font-weight-bold span-username\">{username} </span>\n          <Button variant=\"light\" onClick={() => authorize(null)}>\n            logout\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  </header>\n)\n\nconst mapDispatchTopProps = dispatch => ({\n  authorize: username => {\n    localStorage.clear();\n    dispatch({ type: 'AUTHORIZE', payload: { username } })\n  },\n});\n\nexport default connect(null, mapDispatchTopProps)(Header);","import React, { memo } from 'react';\nimport { Image } from 'react-bootstrap';\n\nconst Message = memo(({ username, image, classProp }) =>\n  <div className=\"Message\">\n    <Image \n      className={`messageImage ${classProp}`} \n      thumbnail \n      src={image} \n      alt=\"image\" \n      />\n    <h3 className={`name ${classProp}`}>{username}</h3>\n  </div>\n)\n\nexport default Message;","import React from 'react';\n\nconst Spinner = () =>\n  <div className=\"background\">\n    <div className=\"lds-dual-ring\"></div>\n  </div>\n\nexport default Spinner;","import \n  React, { \n  useState, \n  useEffect, \n  useRef } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport Header from '../Header';\nimport Message from './Message';\nimport Spinner from '../Spinner';\n\nimport './styles.css';\n\nconst socket = socketIOClient('https://shrouded-depths-50130.herokuapp.com');\n\nfunction Chat({ username }) {\n  const [messages, setMessages] = useState();\n  const [load, setLoad] = useState();\n  const messagesRef = useRef(null);\n  const [err, setErr] = useState(null);\n  const [showButton, setShowButton] = useState({'display' : 'block'});\n\n  const OnChange = async e => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    e.target.value = null;\n    \n    try {\n      const res = await axios.post('https://shrouded-depths-50130.herokuapp.com/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n      });\n      socket.emit('mes', { url: res.data.fileName, author: username });\n      setErr(false);\n      console.log(res);\n    } catch(err) {\n      setErr(err);\n    }\n  };\n\n  const goDown = () =>\n    messagesRef.current.scrollIntoView({ behavior: \"smooth\" })\n\n  useEffect(() => {\n    document.body.style.overflow = 'auto';\n    document.body.style.background = 'lavender';\n\n    const listener = () => {\n      if (window.pageYOffset > document.body.clientHeight / 2) {\n        setShowButton({ 'display' : 'none' });\n      } else {\n        setShowButton({ 'display' : 'block' });\n      }  \n    };\n\n    window.addEventListener('scroll', listener);\n\n    setLoad(true);\n    (async () => {\n      try {\n        const res = await axios.get('https://shrouded-depths-50130.herokuapp.com/api/messages');\n        if (res.data.length === 0) {\n          setErr(true);\n        }\n        setMessages(res.data);\n        setLoad(false);\n\n        setTimeout(() => \n          goDown()\n        , 1000);\n      } catch(err) {\n        setErr(err);\n      }\n    })();\n\n    return () =>\n      window.removeEventListener('scroll', listener);\n  }, []);\n\n  useEffect(() => {\n    if (Array.isArray(messages)) {\n      socket.on('new message', data => {\n        setMessages([...messages, data]);\n        setShowButton({ 'display' : 'block' });\n        setErr(false);\n      }\n      );\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"Chat\">\n      <Header username={username} />\n      {load && <Spinner /> }\n      <div className=\"container chat-container\">\n        {\n          messages && !load &&\n          messages.map(( { url, author }, index, array ) =>\n            <Message \n              image={url} \n              username={author}\n              classProp={username === author ? 'mine' : ''}\n              key={index}\n              ref={index === array.length - 1 ? messagesRef : null}\n              />\n          )\n        }\n\n        {\n          err && \n          <h3 className=\"empty\">No messages yet, bratishka</h3>\n        }\n      </div>\n      <div ref={messagesRef} />\n      <div className=\"fileContainer\">\n        send\n        <input \n          onChange={(e) => OnChange(e)}\n          type=\"file\"\n          name=\"myFile\"\n          className=\"inputfile\"\n          />\n      </div>\n      <button style={showButton} onClick={goDown} className=\"godown\">\n          &#8595;\n      </button>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  username: state.user,\n  spinner: state.spinner,\n});\n\nexport default connect(mapStateToProps)(Chat);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport Lendos from './components/lengind-page/Lendos';\nimport Chat from './components/Chat';\nimport Spinner from './components/Spinner';\n\nimport './App.css';\n\nfunction App({ spinner }) {\n  const [permitted, setPermitted] = useState(undefined);\n\n  const check = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      await axios.get('https://shrouded-depths-50130.herokuapp.com/api/chat', { headers: {\"Authorization\" : `Bearer ${token}`} });\n      setPermitted(true);\n    } catch (err) {\n      setPermitted(false);\n    }\n  };\n\n  useEffect(() => {(\n    async () => await check())()\n  });\n  \n  return (\n    <div className=\"App\">\n      { spinner && <Spinner /> }\n      { typeof permitted === 'undefined' ? <Spinner /> : !permitted ? <Lendos /> : <Chat /> }  \n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  spinner: state.showSpinner,\n  username: state.user,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,document.getElementById('root')\n  );\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tyan3.fe773703.png\";","module.exports = __webpack_public_path__ + \"static/media/tyan2.00fc3172.png\";"],"sourceRoot":""}